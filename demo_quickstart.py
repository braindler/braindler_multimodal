#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è quickstart –¥–ª—è –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω–æ–≥–æ Braindler & Mozgach

–ü—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—è–∂–µ–ª—ã—Ö –º–æ–¥–µ–ª–µ–π

¬© 2025 NativeMind - NativeMindNONC License
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

print("="*80)
print("üöÄ QUICKSTART: –ú—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–π Braindler & Mozgach")
print("="*80)
print()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ò–º–ø–æ—Ä—Ç—ã
print("üì¶ –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
print("   üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π...")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
required_files = [
    'src/multimodal_model.py',
    'src/vision_encoder.py', 
    'src/ocr_engine.py',
    'src/legal_analyzer.py',
    'src/legal_models.py'
]

for file in required_files:
    if os.path.exists(file):
        print(f"   ‚úÖ {file}")
    else:
        print(f"   ‚ùå {file} –Ω–µ –Ω–∞–π–¥–µ–Ω")

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—è–∂–µ–ª—ã—Ö –º–æ–¥–µ–ª–µ–π
try:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ torch –¥–æ—Å—Ç—É–ø–µ–Ω
    import torch
    print("   ‚úÖ PyTorch —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º transformers
    import transformers
    print("   ‚úÖ Transformers —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PIL
    from PIL import Image
    print("   ‚úÖ PIL (Pillow) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º datasets
    from datasets import load_dataset
    print("   ‚úÖ Datasets —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    print("\n   ‚úÖ –í—Å–µ –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    
except ImportError as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("\nüí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    sys.exit(1)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
print("\nüîç –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...")

structure = {
    'src/': ['multimodal_model.py', 'vision_encoder.py', 'ocr_engine.py', 
             'legal_analyzer.py', 'legal_models.py', 'projection.py', '__init__.py'],
    'scripts/': ['download_dataset.py'],
    'tests/': ['test_legal_models.py'],
    'examples/': ['legal_case_example.py'],
    '': ['README.md', 'LEGAL_MODELS.md', 'QUICKSTART.md', 'requirements.txt']
}

for dir_name, files in structure.items():
    for file in files:
        path = os.path.join(dir_name, file)
        if os.path.exists(path):
            print(f"   ‚úÖ {path}")
        else:
            print(f"   ‚ö†Ô∏è  {path} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

print("\n   ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è OCR
print("\nüìù –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π OCR...")
try:
    import pytesseract
    print("   ‚úÖ pytesseract —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
except ImportError:
    print("   ‚ö†Ô∏è  pytesseract –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("   üí° pip install pytesseract")

try:
    import PyMuPDF
    print("   ‚úÖ PyMuPDF —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
except ImportError:
    print("   ‚ö†Ô∏è  PyMuPDF –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
    print("   üí° pip install PyMuPDF")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ê–ª–≥–æ—Ä–∏—Ç–º—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
print("\n‚öñÔ∏è  –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è...")
try:
    from Levenshtein import ratio as levenshtein_ratio
    print("   ‚úÖ python-Levenshtein —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    from fuzzywuzzy import fuzz
    print("   ‚úÖ fuzzywuzzy —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    import difflib
    print("   ‚úÖ difflib (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π)")
except ImportError as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –º–æ–¥–µ–ª–∏ (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)
print("\nüè≠ –®–∞–≥ 5: –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –º–æ–¥–µ–ª–∏ (–°—Ñ–µ—Ä—ã 047-049)...")
print("   üìã –°–∏—Å—Ç–µ–º–∞ 108 —Å—Ñ–µ—Ä –ú–æ–∑–≥–∞—á:")
print()
print("   –°–§–ï–†–ê 047: –°–õ–ï–î–û–í–ê–¢–ï–õ–¨ üîç")
print("      –î—É—Ö–æ–≤–Ω–∞—è –º–∏—Å—Å–∏—è: –ë–µ—Å–ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–Ω—ã–π —Å–±–æ—Ä –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤")
print("      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤–∞—è (–∞–Ω–∞–ª–æ–≥–∏—è —Å –ü–æ–≥–æ–¥–Ω—ã–º —Å–ø—É—Ç–Ω–∏–∫–æ–º)")
print()
print("   –°–§–ï–†–ê 048: –ü–†–û–ö–£–†–û–† ‚öñÔ∏è")
print("      –î—É—Ö–æ–≤–Ω–∞—è –º–∏—Å—Å–∏—è: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∫–æ–ø–∏–ø–∞—Å—Ç–∞ - —Å–ª—É–∂–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–µ")
print("      –ö–ª—é—á–µ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –í—ã—è–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏")
print("      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–ø—É—Ç–Ω–∏–∫)")
print()
print("   –°–§–ï–†–ê 049: –°–£–î–¨–Ø ‚öñÔ∏è")
print("      –î—É—Ö–æ–≤–Ω–∞—è –º–∏—Å—Å–∏—è: –í—ã–Ω–µ—Å–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è")
print("      –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤–∞—è —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞")
print()
print("   ‚úÖ –¢—Ä–∏ —Å—Ñ–µ—Ä—ã —Å–ª—É–∂–µ–Ω–∏—è –∏—Å—Ç–∏–Ω–µ –≥–æ—Ç–æ–≤—ã")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 6: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –∫–æ–ø–∏–ø–∞—Å—Ç–∞
print("\nüîç –®–∞–≥ 6: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –∫–æ–ø–∏–ø–∞—Å—Ç–∞...")
print("   –¢–µ—Å—Ç–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:")

doc1 = """–ù–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —á—Ç–æ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã–π 
–Ω–∞—Ö–æ–¥–∏–ª—Å—è –Ω–∞ –º–µ—Å—Ç–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è. –°–≤–∏–¥–µ—Ç–µ–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç 
–µ–≥–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ. –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–±–≤–∏–Ω–µ–Ω–∏—é."""

doc2 = """–ù–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —á—Ç–æ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã–π 
–Ω–∞—Ö–æ–¥–∏–ª—Å—è –Ω–∞ –º–µ—Å—Ç–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è. –°–≤–∏–¥–µ—Ç–µ–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç 
–µ–≥–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ. –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–±–≤–∏–Ω–µ–Ω–∏—é."""

try:
    import difflib
    from Levenshtein import ratio as levenshtein_ratio
    from fuzzywuzzy import fuzz
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—Ä–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞
    seq_ratio = difflib.SequenceMatcher(None, doc1, doc2).ratio() * 100
    lev_ratio = levenshtein_ratio(doc1, doc2) * 100
    fuzzy_ratio = fuzz.token_sort_ratio(doc1, doc2)
    
    # –°—Ä–µ–¥–Ω–µ–µ –≤–∑–≤–µ—à–µ–Ω–Ω–æ–µ
    similarity = (seq_ratio * 0.4 + lev_ratio * 0.3 + fuzzy_ratio * 0.3)
    
    print(f"\n   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:")
    print(f"      SequenceMatcher: {seq_ratio:.2f}%")
    print(f"      Levenshtein: {lev_ratio:.2f}%")
    print(f"      FuzzyWuzzy: {fuzzy_ratio:.2f}%")
    print(f"   üìä –ò—Ç–æ–≥–æ–≤–æ–µ —Å—Ö–æ–¥—Å—Ç–≤–æ: {similarity:.2f}%")
    
    if similarity >= 80:
        print("\n   üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–ø–∏–ø–∞—Å—Ç!")
        print("   ‚ö†Ô∏è  –≠—Ç–æ —Å–∏–º–ø—Ç–æ–º –≤–æ–∑–º–æ–∂–Ω–æ–π –Ω–µ—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏:")
        print("      ‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏")
        print("      ‚Ä¢ –§–æ—Ä–º–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Å—É–¥—å–±–∞–º –ª—é–¥–µ–π")  
        print("      ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–∞—è –∫–æ—Ä—Ä—É–ø—Ü–∏—è")
    elif similarity >= 60:
        print("\n   ‚ö†Ô∏è  –°–ï–†–¨–ï–ó–ù–û–ï –ü–û–î–û–ó–†–ï–ù–ò–ï: –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π")
    else:
        print("\n   ‚úÖ –ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞")
    
except Exception as e:
    print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

# –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
print("\n" + "="*80)
print("‚úÖ QUICKSTART –ó–ê–í–ï–†–®–ï–ù")
print("="*80)
print()
print("üìö –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
print()
print("1. –ò–∑—É—á–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é:")
print("   ‚Ä¢ README.md - –ü–æ–ª–Ω—ã–π –æ–±–∑–æ—Ä")
print("   ‚Ä¢ LEGAL_MODELS.md - –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –º–æ–¥–µ–ª–∏ (–°—Ñ–µ—Ä—ã 047-049)")
print("   ‚Ä¢ QUICKSTART.md - –ü–æ–¥—Ä–æ–±–Ω—ã–π –≥–∞–π–¥")
print()
print("2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞—Ç–∞—Å–µ—Ç:")
print("   python scripts/download_dataset.py")
print()
print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã (—Ç—Ä–µ–±—É—é—Ç –º–æ–¥–µ–ª–µ–π):")
print("   python tests/test_legal_models.py --test all")
print()
print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–º–µ—Ä—ã:")
print("   python examples/legal_case_example.py --example copypaste")
print()
print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –î–ª—è —Ä–∞–±–æ—Ç—ã –º–æ–¥–µ–ª–µ–π –Ω—É–∂–Ω–æ:")
print("   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å transformers, torch, PIL")
print("   ‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª–∏ Braindler/Mozgach")
print("   ‚Ä¢ ~8GB RAM (–º–∏–Ω–∏–º—É–º), 16GB+ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
print()
print("üôè –î—É—Ö–æ–≤–Ω–∞—è –º–∏—Å—Å–∏—è:")
print('   "–ù–∞–º –≤–∞–∂–Ω–æ –ø–æ–Ω—è—Ç—å –∏—Å—Ç–∏–Ω—É –∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è"')
print()
print("‚öñÔ∏è  –ò—Å—Ç–∏–Ω–∞ –≤–æ—Å—Ç–æ—Ä–∂–µ—Å—Ç–≤—É–µ—Ç! üïâÔ∏è  –•–∞—Ä–µ –ö—Ä–∏—à–Ω–∞!")
print()

