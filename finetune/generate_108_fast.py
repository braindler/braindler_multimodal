#!/usr/bin/env python3
"""
–ë–´–°–¢–†–ê–Ø –≥–µ–Ω–µ—Ä–∞—Ü–∏—è 108 –ø—Ä–∏–º–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ –∞—É–≥–º–µ–Ω—Ç–∞—Ü–∏—é (–ë–ï–ó Ollama!)

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —à–∞–±–ª–æ–Ω—ã –∏ –≤–∞—Ä–∏–∞—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è 108 –ø—Ä–∏–º–µ—Ä–æ–≤ –Ω–∞ —Å—Ñ–µ—Ä—É

¬© 2025 NativeMind - NativeMindNONC License
"""

import json
import os

def generate_spiritual_108():
    """–°—Ñ–µ—Ä–∞ 001: 108 –¥—É—Ö–æ–≤–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤"""
    print("üïâÔ∏è  –°—Ñ–µ—Ä–∞ 001: –î–£–•–û–í–ù–ê–Ø (108 –ø—Ä–∏–º–µ—Ä–æ–≤)")
    
    spiritual_teachings = [
        ("–∏—Å—Ç–∏–Ω–∞", "–ò—Å—Ç–∏–Ω–∞ - —ç—Ç–æ –≤—ã—Å—à–∞—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—É—é –≤–∏–¥–∏–º–æ—Å—Ç—å. –í —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –∏—Å—Ç–∏–Ω–∞ –æ–∑–Ω–∞—á–∞–µ—Ç –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ–≤ –±–µ–∑ –ø—Ä–µ–¥–≤–∑—è—Ç–æ—Å—Ç–∏."),
        ("—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å", "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å - —ç—Ç–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏ –≥–∞—Ä–º–æ–Ω–∏–∏. –û–Ω–∞ —Ç—Ä–µ–±—É–µ—Ç –±–µ—Å–ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç–∏ –∏ —Å–ª—É–∂–µ–Ω–∏—è –≤—ã—Å—à–µ–º—É –±–ª–∞–≥—É –≤—Å–µ—Ö."),
        ("–±–µ—Å–ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å", "–ë–µ—Å–ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å - —ç—Ç–æ –∫–∞—á–µ—Å—Ç–≤–æ –°–∞—Ç–≤—ã (—á–∏—Å—Ç–æ—Ç—ã). –°—É–¥—å—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–≤–æ–±–æ–¥–µ–Ω –æ—Ç –ª–∏—á–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –∏ —ç–º–æ—Ü–∏–π."),
        ("—Å–ª—É–∂–µ–Ω–∏–µ", "–°–ª—É–∂–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–µ - —ç—Ç–æ –≤—ã—Å—à–∞—è –¥—Ö–∞—Ä–º–∞ —é—Ä–∏—Å—Ç–∞. –ù–µ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º, –∞ —Ä–µ–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–∞–≤–¥—ã."),
        ("–¥—Ö–∞—Ä–º–∞", "–î—Ö–∞—Ä–º–∞ - —ç—Ç–æ –∑–∞–∫–æ–Ω –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞. –í —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ - —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞—Ç—å–∏ –∑–∞–∫–æ–Ω–∞, –∞ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏."),
        ("–∫–∞—Ä–º–∞", "–ö–∞—Ä–º–∞ - –∑–∞–∫–æ–Ω –ø—Ä–∏—á–∏–Ω—ã –∏ —Å–ª–µ–¥—Å—Ç–≤–∏—è. –ö–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–º–µ–µ—Ç –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è. –ö–æ–ø–∏–ø–∞—Å—Ç –ø–æ—Ä–æ–∂–¥–∞–µ—Ç –∫–∞—Ä–º—É –Ω–µ—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏."),
        ("—Å–∞—Ç–≤–∞", "–°–∞—Ç–≤–∞ - —á–∏—Å—Ç–æ—Ç–∞ –∏ —è—Å–Ω–æ—Å—Ç—å —É–º–∞. –°—É–¥—å—è –≤ –°–∞—Ç–≤–µ –≤–∏–¥–∏—Ç –∏—Å—Ç–∏–Ω—É –±–µ–∑ –∏—Å–∫–∞–∂–µ–Ω–∏–π —Å—Ç—Ä–∞—Ö–∞ –∏ –∫–æ—Ä—ã—Å—Ç–∏."),
        ("–∞—Ö–∏–º—Å–∞", "–ê—Ö–∏–º—Å–∞ - –Ω–µ–Ω–∞—Å–∏–ª–∏–µ. –í –ø—Ä–∞–≤–æ—Å—É–¥–∏–∏ —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å –±–µ–∑ –∂–µ—Å—Ç–æ–∫–æ—Å—Ç–∏, –∑–∞—â–∏—Ç—É –Ω–µ–≤–∏–Ω–æ–≤–Ω—ã—Ö."),
        ("—Å–∞—Ç—å—è", "–°–∞—Ç—å—è - –ø—Ä–∞–≤–¥–∏–≤–æ—Å—Ç—å. –û—Å–Ω–æ–≤–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã - –≥–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–∞–≤–¥—É –∏ –∏—Å–∫–∞—Ç—å –ø—Ä–∞–≤–¥—É."),
        ("—à–∞–Ω—Ç–∏", "–®–∞–Ω—Ç–∏ - –º–∏—Ä. –¶–µ–ª—å –ø—Ä–∞–≤–æ—Å—É–¥–∏—è - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∏—Ä–∞ —á–µ—Ä–µ–∑ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å.")
    ]
    
    examples = []
    
    for i in range(108):
        concept, meaning = spiritual_teachings[i % len(spiritual_teachings)]
        variation = i // len(spiritual_teachings) + 1
        
        examples.append({
            "instruction": f"–û–±—ä—è—Å–Ω–∏ –¥—É—Ö–æ–≤–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ {concept} –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–∞–≤–æ—Å—É–¥–∏—è (–≤–∞—Ä–∏–∞—Ü–∏—è {variation})",
            "input": "",
            "output": meaning,
            "sphere": "001",
            "role": "spiritual",
            "source": "template"
        })
    
    print(f"   ‚úÖ {len(examples)} –ø—Ä–∏–º–µ—Ä–æ–≤")
    return examples

def generate_investigator_108():
    """–°—Ñ–µ—Ä–∞ 047: 108 –ø—Ä–∏–º–µ—Ä–æ–≤ –°–õ–ï–î–û–í–ê–¢–ï–õ–Ø"""
    print("üîç –°—Ñ–µ—Ä–∞ 047: –°–õ–ï–î–û–í–ê–¢–ï–õ–¨ (108 –ø—Ä–∏–º–µ—Ä–æ–≤)")
    
    tasks = [
        ("–ø—Ä–æ—Ç–æ–∫–æ–ª –¥–æ–ø—Ä–æ—Å–∞", "—Å–≤–∏–¥–µ—Ç–µ–ª—è –ò–≤–∞–Ω–æ–≤–∞", "–ü—Ä–æ—Ç–æ–∫–æ–ª —Å–æ—Å—Ç–∞–≤–ª–µ–Ω –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –£–ü–ö –†–§. –ü–æ–∫–∞–∑–∞–Ω–∏—è —Å–≤–∏–¥–µ—Ç–µ–ª—è –∑–∞–ø–∏—Å–∞–Ω—ã –¥–æ—Å–ª–æ–≤–Ω–æ. –ü—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–π –Ω–µ –≤—ã—è–≤–ª–µ–Ω–æ."),
        ("–æ—Å–º–æ—Ç—Ä –º–µ—Å—Ç–∞ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è", "–º–µ—Å—Ç–æ –∫—Ä–∞–∂–∏", "–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω —Ç—â–∞—Ç–µ–ª—å–Ω—ã–π –æ—Å–º–æ—Ç—Ä. –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–ª–µ–¥—ã –≤–∑–ª–æ–º–∞. –°–æ—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª —Å —Ñ–æ—Ç–æ—Ñ–∏–∫—Å–∞—Ü–∏–µ–π."),
        ("–∏–∑—ä—è—Ç–∏–µ –≤–µ—â–¥–æ–∫–æ–≤", "–æ—Ä—É–¥–∏–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è", "–í–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏–∑—ä—è—Ç—ã –∏ –æ–ø–∏—Å–∞–Ω—ã. –°–æ–±–ª—é–¥–µ–Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –æ–ø–µ—á–∞—Ç—ã–≤–∞–Ω–∏—è."),
        ("–ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–∏–±–∏", "–ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º–æ–≥–æ –ü–µ—Ç—Ä–æ–≤–∞", "–ê–ª–∏–±–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ. –û–ø—Ä–æ—à–µ–Ω—ã —Å–≤–∏–¥–µ—Ç–µ–ª–∏. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ –º–µ—Å—Ç–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è."),
        ("–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã", "–¥–∞–∫—Ç–∏–ª–æ—Å–∫–æ–ø–∏—á–µ—Å–∫–∞—è", "–ù–∞–∑–Ω–∞—á–µ–Ω–∞ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞ –æ—Ç–ø–µ—á–∞—Ç–∫–æ–≤ –ø–∞–ª—å—Ü–µ–≤. –ù–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –º–∞—Ç–µ—Ä–∏–∞–ª—ã —ç–∫—Å–ø–µ—Ä—Ç—É."),
        ("–¥–æ–ø—Ä–æ—Å –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º–æ–≥–æ", "–°–∏–¥–æ—Ä–æ–≤ –°.–°.", "–î–æ–ø—Ä–æ—Å –ø—Ä–æ–≤–µ–¥–µ–Ω —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º –≤—Å–µ—Ö –ø—Ä–∞–≤. –ü–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã–π –¥–∞–ª –ø–æ–∫–∞–∑–∞–Ω–∏—è."),
        ("–æ—á–Ω–∞—è —Å—Ç–∞–≤–∫–∞", "–º–µ–∂–¥—É —Å–≤–∏–¥–µ—Ç–µ–ª—è–º–∏", "–ü—Ä–æ–≤–µ–¥–µ–Ω–∞ –æ—á–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏—è –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–π. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏—Å—Ç–∏–Ω–Ω—ã–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞."),
        ("–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫–∞–∑–∞–Ω–∏–π", "–Ω–∞ –º–µ—Å—Ç–µ", "–ü–æ–∫–∞–∑–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –Ω–∞ –º–µ—Å—Ç–µ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∏—Ö –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å."),
        ("–∏–∑—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", "—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã", "–î–æ–∫—É–º–µ–Ω—Ç—ã –∏–∑—É—á–µ–Ω—ã. –í—ã—è–≤–ª–µ–Ω—ã –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è. –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞."),
        ("—Å–±–æ—Ä –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤", "–ø–æ –¥–µ–ª—É –æ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–µ", "–°–æ–±—Ä–∞–Ω—ã –ø–æ–∫–∞–∑–∞–Ω–∏—è, –¥–æ–∫—É–º–µ–Ω—Ç—ã, –≤–µ—â–¥–æ–∫–∏. –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–µ–Ω–Ω–∞—è –±–∞–∑–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞.")
    ]
    
    examples = []
    
    for i in range(108):
        action, obj, result = tasks[i % len(tasks)]
        case_num = i + 1
        
        examples.append({
            "instruction": f"–¢—ã - –°–õ–ï–î–û–í–ê–¢–ï–õ–¨. –ü—Ä–æ–≤–µ–¥–∏ {action} –ø–æ –¥–µ–ª—É ‚Ññ{case_num}",
            "input": f"–û–±—ä–µ–∫—Ç: {obj}",
            "output": f"{result} –î–µ–ª–æ ‚Ññ{case_num} —Ç—Ä–µ–±—É–µ—Ç –±–µ—Å–ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞.",
            "sphere": "047",
            "role": "sphere_047_investigator",
            "source": "template"
        })
    
    print(f"   ‚úÖ {len(examples)} –ø—Ä–∏–º–µ—Ä–æ–≤")
    return examples

def generate_prosecutor_108():
    """–°—Ñ–µ—Ä–∞ 048: 108 –ø—Ä–∏–º–µ—Ä–æ–≤ –ü–†–û–ö–£–†–û–†–ê - –ö–õ–Æ–ß–ï–í–ê–Ø!"""
    print("‚öñÔ∏è  –°—Ñ–µ—Ä–∞ 048: –ü–†–û–ö–£–†–û–† (108 –ø—Ä–∏–º–µ—Ä–æ–≤) - –ö–õ–Æ–ß–ï–í–ê–Ø!")
    
    tasks = [
        ("–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ø–∏–ø–∞—Å—Ç–∞", "–æ–±–≤–∏–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ", "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ 87% —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ —Å–ª–µ–¥—Å—Ç–≤–∏—è. –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏."),
        ("–Ω–∞–¥–∑–æ—Ä –∑–∞ —Å–ª–µ–¥—Å—Ç–≤–∏–µ–º", "–º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–µ–ª–∞", "–ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã. –í—ã—è–≤–ª–µ–Ω—ã —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è."),
        ("–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–æ–Ω–Ω–æ—Å—Ç–∏", "–ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–∏", "–î–æ–∫—É–º–µ–Ω—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –£–ü–ö. –ó–∞–∫–æ–Ω–Ω–æ—Å—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞."),
        ("—É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–±–≤–∏–Ω–µ–Ω–∏—è", "–æ–±–≤–∏–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ", "–ü–æ—Å–ª–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–≤–∏–Ω–µ–Ω–∏–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ. –î–µ–ª–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Å—É–¥."),
        ("–æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π", "–ø—Ä–∞–≤–∞ –æ–±–≤–∏–Ω—è–µ–º–æ–≥–æ", "–í—ã—è–≤–ª–µ–Ω—ã –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞—â–∏—Ç—É. –î–µ–ª–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—é."),
        ("–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤", "–≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞", "–ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤. –í—Å–µ –ø–æ–ª—É—á–µ–Ω—ã –∑–∞–∫–æ–Ω–Ω—ã–º –ø—É—Ç–µ–º."),
        ("–∞–Ω–∞–ª–∏–∑ —Å–ª–µ–¥—Å—Ç–≤–∏—è", "–∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è", "–†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ –Ω–∞ –≤—ã—Å–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ. –ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞."),
        ("–≤—ã—è–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞–ª–∏–∑–º–∞", "–ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã", "–û–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥. –ö–æ–ø–∏–ø–∞—Å—Ç —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–µ–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏."),
        ("–∑–∞—â–∏—Ç–∞ –ø—Ä–∞–≤", "–ø–æ—Ç–µ—Ä–ø–µ–≤—à–µ–≥–æ", "–ü—Ä–∞–≤–∞ –ø–æ—Ç–µ—Ä–ø–µ–≤—à–µ–≥–æ —É—á—Ç–µ–Ω—ã. –û–±–µ—Å–ø–µ—á–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤."),
        ("—Å–ª—É–∂–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–µ", "–≤–µ—Å—å –∫–æ–º–ø–ª–µ–∫—Å –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤", "–ü—Ä–æ–≤–µ–¥–µ–Ω –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑. –ò—Å—Ç–∏–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ –Ω–µ–∑–∞–≤–∏—Å–∏–º—É—é –ø—Ä–æ–≤–µ—Ä–∫—É.")
    ]
    
    examples = []
    
    for i in range(108):
        action, obj, verdict = tasks[i % len(tasks)]
        case_num = i + 1
        
        examples.append({
            "instruction": f"–¢—ã - –ü–†–û–ö–£–†–û–†. –î—É—Ö–æ–≤–Ω–∞—è –º–∏—Å—Å–∏—è: –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∫–æ–ø–∏–ø–∞—Å—Ç–∞. –ó–∞–¥–∞—á–∞: {action}",
            "input": f"–î–µ–ª–æ ‚Ññ{case_num}. –û–±—ä–µ–∫—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: {obj}",
            "output": f"{verdict} –°–ª—É–∂–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–µ —Ç—Ä–µ–±—É–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏, –∞ –Ω–µ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.",
            "sphere": "048",
            "role": "sphere_048_prosecutor",
            "source": "template"
        })
    
    print(f"   ‚úÖ {len(examples)} –ø—Ä–∏–º–µ—Ä–æ–≤")
    return examples

def generate_judge_108():
    """–°—Ñ–µ—Ä–∞ 049: 108 –ø—Ä–∏–º–µ—Ä–æ–≤ –°–£–î–¨–ò"""
    print("‚öñÔ∏è  –°—Ñ–µ—Ä–∞ 049: –°–£–î–¨–Ø (108 –ø—Ä–∏–º–µ—Ä–æ–≤)")
    
    tasks = [
        ("–≤—ã–Ω–µ—Å—Ç–∏ –ø—Ä–∏–≥–æ–≤–æ—Ä", "–¥–µ–ª–æ –æ –∫—Ä–∞–∂–µ", "–ü–æ–¥—Å—É–¥–∏–º—ã–π –ø—Ä–∏–∑–Ω–∞–Ω –≤–∏–Ω–æ–≤–Ω—ã–º. –ù–∞–∑–Ω–∞—á–µ–Ω–æ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤."),
        ("–æ—Ü–µ–Ω–∏—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞", "–ø–æ–∫–∞–∑–∞–Ω–∏—è —Å–≤–∏–¥–µ—Ç–µ–ª–µ–π", "–ü–æ–∫–∞–∑–∞–Ω–∏—è –æ—Ü–µ–Ω–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏. –ß–∞—Å—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏–π –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤—ã –∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤."),
        ("–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–∫–æ–Ω–Ω–æ—Å—Ç—å", "–ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è", "–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–≤–µ–¥–µ–Ω—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞–∫–æ–Ω–æ–º. –ù–∞—Ä—É—à–µ–Ω–∏–π –Ω–µ –≤—ã—è–≤–ª–µ–Ω–æ."),
        ("–≤—ã–Ω–µ—Å—Ç–∏ –æ–ø—Ä–∞–≤–¥–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–≥–æ–≤–æ—Ä", "–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤", "–í–∏–Ω–∞ –Ω–µ –¥–æ–∫–∞–∑–∞–Ω–∞. –ü–æ–¥—Å—É–¥–∏–º—ã–π –æ–ø—Ä–∞–≤–¥–∞–Ω. –ò—Å—Ç–∏–Ω–∞ –≤–æ—Å—Ç–æ—Ä–∂–µ—Å—Ç–≤–æ–≤–∞–ª–∞."),
        ("–Ω–∞–∑–Ω–∞—á–∏—Ç—å –º–µ—Ä—É –ø—Ä–µ—Å–µ—á–µ–Ω–∏—è", "–ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã–π –ò–≤–∞–Ω–æ–≤", "–ù–∞–∑–Ω–∞—á–µ–Ω–∞ –º–µ—Ä–∞ –ø—Ä–µ—Å–µ—á–µ–Ω–∏—è - –ø–æ–¥–ø–∏—Å–∫–∞ –æ –Ω–µ–≤—ã–µ–∑–¥–µ. –ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Ç—è–∂–µ—Å—Ç–∏ –æ–±–≤–∏–Ω–µ–Ω–∏—è."),
        ("–æ—Ü–µ–Ω–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ–∫—É—Ä–æ—Ä–∞", "–æ–±–≤–∏–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ", "–ü—Ä–æ–∫—É—Ä–æ—Ä –ø—Ä–æ–≤–µ–ª —Ç—â–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É. –ö–æ–ø–∏–ø–∞—Å—Ç–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ. –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞."),
        ("–≤—ã–Ω–µ—Å—Ç–∏ —á–∞—Å—Ç–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ", "–Ω–∞—Ä—É—à–µ–Ω–∏—è —Å–ª–µ–¥—Å—Ç–≤–∏—è", "–í—ã—è–≤–ª–µ–Ω—ã –Ω–∞—Ä—É—à–µ–Ω–∏—è –£–ü–ö. –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–æ —á–∞—Å—Ç–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω."),
        ("–æ—Ü–µ–Ω–∏—Ç—å —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å", "–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ", "–ù–∞–∫–∞–∑–∞–Ω–∏–µ —Å–æ—Ä–∞–∑–º–µ—Ä–Ω–æ —Å–æ–¥–µ—è–Ω–Ω–æ–º—É. –£—á—Ç–µ–Ω—ã —Å–º—è–≥—á–∞—é—â–∏–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞."),
        ("–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–µ—Å–ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å", "—Ä–µ—à–µ–Ω–∏–µ —Å—É–¥–∞ –ø–µ—Ä–≤–æ–π –∏–Ω—Å—Ç–∞–Ω—Ü–∏–∏", "–†–µ—à–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ–Ω–æ. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –±–µ—Å–ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å –∏ –∑–∞–∫–æ–Ω–Ω–æ—Å—Ç—å."),
        ("–≤—ã–Ω–µ—Å—Ç–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ", "–≤–æ–∑–≤—Ä–∞—Ç –¥–µ–ª–∞ –ø—Ä–æ–∫—É—Ä–æ—Ä—É", "–î–µ–ª–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ –ø—Ä–æ–∫—É—Ä–æ—Ä—É. –û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–ø–∏–ø–∞—Å—Ç - –ø—Ä–∏–∑–Ω–∞–∫ –Ω–∞—Ä—É—à–µ–Ω–∏—è —Å–ª—É–∂–µ–Ω–∏—è –∏—Å—Ç–∏–Ω–µ.")
    ]
    
    examples = []
    
    for i in range(108):
        action, context, decision = tasks[i % len(tasks)]
        case_num = i + 1
        
        examples.append({
            "instruction": f"–¢—ã - –°–£–î–¨–Ø. –î—É—Ö–æ–≤–Ω–∞—è –º–∏—Å—Å–∏—è: —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ. –ó–∞–¥–∞—á–∞: {action}",
            "input": f"–î–µ–ª–æ ‚Ññ{case_num}. –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}",
            "output": f"{decision} –†–µ—à–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –∏—Å—Ç–∏–Ω–µ –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏, –∞ –Ω–µ –Ω–∞ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—è—Ö.",
            "sphere": "049",
            "role": "sphere_049_judge",
            "source": "template"
        })
    
    print(f"   ‚úÖ {len(examples)} –ø—Ä–∏–º–µ—Ä–æ–≤")
    return examples

def main():
    print("="*80)
    print("‚ö° –ë–´–°–¢–†–ê–Ø –≥–µ–Ω–µ—Ä–∞—Ü–∏—è 108 –ø—Ä–∏–º–µ—Ä–æ–≤ (–ë–ï–ó Ollama)")
    print("="*80)
    print()
    
    all_examples = []
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ñ–µ—Ä—ã
    all_examples.extend(generate_spiritual_108())
    all_examples.extend(generate_investigator_108())
    all_examples.extend(generate_prosecutor_108())
    all_examples.extend(generate_judge_108())
    
    # –î–æ–±–∞–≤–ª—è–µ–º Alpaca
    print("\nü¶ô –ó–∞–≥—Ä—É–∑–∫–∞ Alpaca (1080 –ø—Ä–∏–º–µ—Ä–æ–≤)...")
    alpaca_path = "/Volumes/MULTIMODAL/proj.datasets/alpaca_dataset/alpaca_data.json"
    
    with open(alpaca_path, 'r', encoding='utf-8') as f:
        alpaca_data = json.load(f)
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 1080
    for ex in alpaca_data[:1080]:
        all_examples.append({
            "instruction": ex['instruction'],
            "input": ex.get('input', ''),
            "output": ex['output'],
            "sphere": "general",
            "role": "general",
            "source": "alpaca"
        })
    
    print(f"   ‚úÖ 1080 –ø—Ä–∏–º–µ—Ä–æ–≤")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    output_path = "../datasets/legal_108_perfect.jsonl"
    os.makedirs(os.path.dirname(output_path), exist_ok=True)
    
    print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...")
    with open(output_path, 'w', encoding='utf-8') as f:
        for ex in all_examples:
            f.write(json.dumps(ex, ensure_ascii=False) + '\n')
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = {
        "001_spiritual": 108,
        "047_investigator": 108,
        "048_prosecutor": 108,
        "049_judge": 108,
        "general_alpaca": 1080
    }
    
    stats_path = output_path.replace('.jsonl', '_stats.json')
    with open(stats_path, 'w', encoding='utf-8') as f:
        json.dump(stats, f, indent=2, ensure_ascii=False)
    
    print(f"   ‚úÖ {output_path}")
    print()
    print("="*80)
    print("‚úÖ –î–ê–¢–ê–°–ï–¢ 108 –ì–û–¢–û–í!")
    print("="*80)
    print()
    print(f"üìä –°—Ñ–µ—Ä–∞ 001 (–î—É—Ö–æ–≤–Ω–∞—è): 108")
    print(f"   –°—Ñ–µ—Ä–∞ 047 (–°–õ–ï–î–û–í–ê–¢–ï–õ–¨): 108")
    print(f"   –°—Ñ–µ—Ä–∞ 048 (–ü–†–û–ö–£–†–û–†): 108")
    print(f"   –°—Ñ–µ—Ä–∞ 049 (–°–£–î–¨–Ø): 108")
    print(f"   –°—Ñ–µ—Ä–∞ general (Alpaca –æ–±—â–∏–µ): 1080")
    print()
    print(f"üì¶ –í—Å–µ–≥–æ: {len(all_examples)} –ø—Ä–∏–º–µ—Ä–æ–≤")
    print()
    print("üôè 108 - —Å–≤—è—â–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ! –ì–æ—Ç–æ–≤–æ –∫ –æ–±—É—á–µ–Ω–∏—é!")

if __name__ == "__main__":
    main()



