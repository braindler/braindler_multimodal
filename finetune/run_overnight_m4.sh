#!/bin/bash
#
# –ù–æ—á–Ω–æ–π —Ñ–∞–π–Ω—Ç—é–Ω–∏–Ω–≥ –Ω–∞ M4 MacBook Pro
# 
# –ó–∞–ø—É—Å–∫: ./run_overnight_m4.sh
# –í—Ä–µ–º—è: ~8 —á–∞—Å–æ–≤ (3 —Å—Ñ–µ—Ä—ã √ó 2.5 —á–∞—Å–∞)
#
# ¬© 2025 NativeMind - NativeMindNONC License

set -e

echo "================================================================================"
echo "üåô –ù–û–ß–ù–û–ô –§–ê–ô–ù–¢–Æ–ù–ò–ù–ì –Ω–∞ M4 MacBook Pro"
echo "================================================================================"
echo ""
echo "üíª –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: Apple M4"
echo "üíæ –ü–∞–º—è—Ç—å: 32GB Shared Memory"
echo "‚è±Ô∏è  –í—Ä–µ–º—è: ~8 —á–∞—Å–æ–≤ (–¥–æ —É—Ç—Ä–∞)"
echo ""
echo "üôè –î—É—Ö–æ–≤–Ω–∞—è –º–∏—Å—Å–∏—è: –°–ª—É–∂–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–µ —á–µ—Ä–µ–∑ –æ–±—É—á–µ–Ω–∏–µ AI"
echo ""

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")/.."

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º venv
echo "üîß –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source venv/bin/activate

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ PyTorch —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
python -c "import torch; print(f'‚úÖ PyTorch {torch.__version__}')" || {
    echo "‚ùå PyTorch –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º MPS
python -c "import torch; print(f'‚úÖ MPS –¥–æ—Å—Ç—É–ø–µ–Ω: {torch.backends.mps.is_available()}')"

# ===============================================================================
# –≠–¢–ê–ü 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ (30 –º–∏–Ω)
# ===============================================================================
echo ""
echo "================================================================================"
echo "üìö –≠–¢–ê–ü 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞"
echo "================================================================================"
echo ""

if [ -f "datasets/combined_legal_training.jsonl" ]; then
    echo "‚úÖ –î–∞—Ç–∞—Å–µ—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    cat datasets/combined_legal_training_stats.json
else
    echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞..."
    python finetune/prepare_combined_dataset.py
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
if [ ! -f "datasets/combined_legal_training.jsonl" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∞—Ç–∞—Å–µ—Ç"
    exit 1
fi

echo ""
echo "‚úÖ –î–∞—Ç–∞—Å–µ—Ç –≥–æ—Ç–æ–≤"
echo ""

# ===============================================================================
# –≠–¢–ê–ü 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PEFT (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
# ===============================================================================
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip install peft bitsandbytes accelerate -q || {
    echo "‚ö†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PEFT..."
    pip install peft accelerate
}

echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo ""

# ===============================================================================
# –≠–¢–ê–ü 3: –§–∞–π–Ω—Ç—é–Ω–∏–Ω–≥ —Ç—Ä–µ—Ö —Å—Ñ–µ—Ä
# ===============================================================================
echo "================================================================================"
echo "üî• –≠–¢–ê–ü 2: –§–∞–π–Ω—Ç—é–Ω–∏–Ω–≥ —Ç—Ä–µ—Ö —Å—Ñ–µ—Ä"
echo "================================================================================"
echo ""
echo "‚è∞ –ù–∞—á–∞–ª–æ: $(date '+%H:%M:%S')"
echo ""

START_TIME=$(date +%s)

# –°—Ñ–µ—Ä–∞ 047: –°–õ–ï–î–û–í–ê–¢–ï–õ–¨
echo "--------------------------------------------------------------------------------"
echo "‚öñÔ∏è  –°—Ñ–µ—Ä–∞ 047: –°–õ–ï–î–û–í–ê–¢–ï–õ–¨"
echo "--------------------------------------------------------------------------------"
SPHERE_START=$(date +%s)

python finetune/finetune_overnight_m4.py \
    --sphere 047 \
    --steps 800 \
    --batch-size 8

SPHERE_END=$(date +%s)
SPHERE_DURATION=$((SPHERE_END - SPHERE_START))
echo ""
echo "‚úÖ –°—Ñ–µ—Ä–∞ 047 –æ–±—É—á–µ–Ω–∞ –∑–∞ $(($SPHERE_DURATION / 60)) –º–∏–Ω—É—Ç"
echo ""

# –°—Ñ–µ—Ä–∞ 048: –ü–†–û–ö–£–†–û–† (–ö–õ–Æ–ß–ï–í–ê–Ø!)
echo "--------------------------------------------------------------------------------"
echo "‚öñÔ∏è  –°—Ñ–µ—Ä–∞ 048: –ü–†–û–ö–£–†–û–† (–∫–ª—é—á–µ–≤–∞—è –¥—É—Ö–æ–≤–Ω–∞—è –º–∏—Å—Å–∏—è!)"
echo "--------------------------------------------------------------------------------"
SPHERE_START=$(date +%s)

python finetune/finetune_overnight_m4.py \
    --sphere 048 \
    --steps 800 \
    --batch-size 8

SPHERE_END=$(date +%s)
SPHERE_DURATION=$((SPHERE_END - SPHERE_START))
echo ""
echo "‚úÖ –°—Ñ–µ—Ä–∞ 048 –æ–±—É—á–µ–Ω–∞ –∑–∞ $(($SPHERE_DURATION / 60)) –º–∏–Ω—É—Ç"
echo ""

# –°—Ñ–µ—Ä–∞ 049: –°–£–î–¨–Ø
echo "--------------------------------------------------------------------------------"
echo "‚öñÔ∏è  –°—Ñ–µ—Ä–∞ 049: –°–£–î–¨–Ø"
echo "--------------------------------------------------------------------------------"
SPHERE_START=$(date +%s)

python finetune/finetune_overnight_m4.py \
    --sphere 049 \
    --steps 800 \
    --batch-size 8

SPHERE_END=$(date +%s)
SPHERE_DURATION=$((SPHERE_END - SPHERE_START))
echo ""
echo "‚úÖ –°—Ñ–µ—Ä–∞ 049 –æ–±—É—á–µ–Ω–∞ –∑–∞ $(($SPHERE_DURATION / 60)) –º–∏–Ω—É—Ç"
echo ""

# ===============================================================================
# –§–ò–ù–ê–õ
# ===============================================================================
END_TIME=$(date +%s)
TOTAL_DURATION=$((END_TIME - START_TIME))
HOURS=$((TOTAL_DURATION / 3600))
MINUTES=$(((TOTAL_DURATION % 3600) / 60))

echo "================================================================================"
echo "üéâ –ù–û–ß–ù–û–ï –û–ë–£–ß–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo "================================================================================"
echo ""
echo "‚è∞ –û–∫–æ–Ω—á–∞–Ω–∏–µ: $(date '+%H:%M:%S')"
echo "‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è: ${HOURS}—á ${MINUTES}–º–∏–Ω"
echo ""
echo "‚úÖ –û–±—É—á–µ–Ω—ã –º–æ–¥–µ–ª–∏:"
echo "   üìÅ models/sphere_047_m4_overnight - –°–õ–ï–î–û–í–ê–¢–ï–õ–¨"
echo "   üìÅ models/sphere_048_m4_overnight - –ü–†–û–ö–£–†–û–†"
echo "   üìÅ models/sphere_049_m4_overnight - –°–£–î–¨–Ø"
echo ""
echo "üìä –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π:"
echo "      python test_trained_spheres.py"
echo ""
echo "   2. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ HuggingFace:"
echo "      python finetune/publish_to_huggingface.py --all"
echo ""
echo "   3. –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Ollama:"
echo "      python finetune/publish_to_ollama.py --all"
echo ""
echo "‚öñÔ∏è  –ò—Å—Ç–∏–Ω–∞ –≤–æ—Å—Ç–æ—Ä–∂–µ—Å—Ç–≤–æ–≤–∞–ª–∞! üïâÔ∏è  –•–∞—Ä–µ –ö—Ä–∏—à–Ω–∞!"
echo ""



