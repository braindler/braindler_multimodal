#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—ã –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –º–æ–¥–µ–ª–µ–π

–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –°—Ñ–µ—Ä 047, 048, 049 - —Å–ª—É–∂–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–µ

¬© 2025 NativeMind - NativeMindNONC License
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', 'src'))

from legal_models import (
    MozgachSphere047_Investigator,
    MozgachSphere048_Prosecutor,
    MozgachSphere049_Judge,
    LegalModelsFactory
)


def test_investigator():
    """–¢–µ—Å—Ç –°–õ–ï–î–û–í–ê–¢–ï–õ–¨ (–°—Ñ–µ—Ä–∞ 047)"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢: –ú–û–ó–ì–ê–ß108 - –°–§–ï–†–ê 047 (–°–õ–ï–î–û–í–ê–¢–ï–õ–¨)")
    print("="*80)
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å
    investigator = MozgachSphere047_Investigator(device="cpu")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
    print("\nüìã –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: –°–±–æ—Ä –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤")
    
    test_prompt = """
–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å–≤–∏–¥–µ—Ç–µ–ª—è:

"–Ø –≤–∏–¥–µ–ª –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º–æ–≥–æ –æ–∫–æ–ª–æ –º–∞–≥–∞–∑–∏–Ω–∞ –≤ 18:00. –û–Ω –±—ã–ª –≤ —á–µ—Ä–Ω–æ–π –∫—É—Ä—Ç–∫–µ.
–ß–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç —è —É—Å–ª—ã—à–∞–ª –∫—Ä–∏–∫–∏ –∏ –≤—ã–∑–≤–∞–ª –ø–æ–ª–∏—Ü–∏—é."

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–∏ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è.
"""
    
    response = investigator.chat(test_prompt)
    
    print("\nüìä –û—Ç–≤–µ—Ç –°–õ–ï–î–û–í–ê–¢–ï–õ–Ø:")
    print(response)
    print("\n‚úÖ –¢–µ—Å—Ç –°–õ–ï–î–û–í–ê–¢–ï–õ–Ø –ø—Ä–æ–π–¥–µ–Ω")


def test_prosecutor():
    """–¢–µ—Å—Ç –ü–†–û–ö–£–†–û–† (–°—Ñ–µ—Ä–∞ 048)"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢: –ú–û–ó–ì–ê–ß108 - –°–§–ï–†–ê 048 (–ü–†–û–ö–£–†–û–†)")
    print("="*80)
    print("üôè –î—É—Ö–æ–≤–Ω–∞—è –º–∏—Å—Å–∏—è: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∫–æ–ø–∏–ø–∞—Å—Ç–∞")
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å
    prosecutor = MozgachSphere048_Prosecutor(device="cpu")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
    print("\nüìã –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –∫–æ–ø–∏–ø–∞—Å—Ç")
    
    test_prompt = """
–£ —Ç–µ–±—è –µ—Å—Ç—å –¥–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞:

–î–û–ö–£–ú–ï–ù–¢ –°–õ–ï–î–û–í–ê–¢–ï–õ–Ø:
"–ù–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —á—Ç–æ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã–π 
–Ω–∞—Ö–æ–¥–∏–ª—Å—è –Ω–∞ –º–µ—Å—Ç–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è. –°–≤–∏–¥–µ—Ç–µ–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç 
–µ–≥–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ. –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–±–≤–∏–Ω–µ–Ω–∏—é."

–î–û–ö–£–ú–ï–ù–¢ –ü–†–û–ö–£–†–û–†–ê:
"–ù–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —á—Ç–æ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã–π 
–Ω–∞—Ö–æ–¥–∏–ª—Å—è –Ω–∞ –º–µ—Å—Ç–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è. –°–≤–∏–¥–µ—Ç–µ–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç 
–µ–≥–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ. –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–±–≤–∏–Ω–µ–Ω–∏—é."

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã. –ï—Å—Ç—å –ª–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏ –∫–æ–ø–∏–ø–∞—Å—Ç–∞?
"""
    
    response = prosecutor.chat(test_prompt)
    
    print("\n‚öñÔ∏è  –û—Ç–≤–µ—Ç –ü–†–û–ö–£–†–û–†–ê:")
    print(response)
    print("\n‚úÖ –¢–µ—Å—Ç –ü–†–û–ö–£–†–û–†–ê –ø—Ä–æ–π–¥–µ–Ω")


def test_judge():
    """–¢–µ—Å—Ç –°–£–î–¨–Ø (–°—Ñ–µ—Ä–∞ 049)"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢: –ú–û–ó–ì–ê–ß108 - –°–§–ï–†–ê 049 (–°–£–î–¨–Ø)")
    print("="*80)
    print("‚öñÔ∏è  –î—É—Ö–æ–≤–Ω–∞—è –º–∏—Å—Å–∏—è: –í—ã–Ω–µ—Å–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è")
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å
    judge = MozgachSphere049_Judge(device="cpu")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
    print("\nüìã –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: –°—É–¥–µ–±–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ")
    
    test_prompt = """
–ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π –¥–µ–ª–æ:

–ú–ê–¢–ï–†–ò–ê–õ–´ –°–õ–ï–î–°–¢–í–ò–Ø:
- –ü–æ–∫–∞–∑–∞–Ω–∏—è 3 —Å–≤–∏–¥–µ—Ç–µ–ª–µ–π
- –í–∏–¥–µ–æ–∑–∞–ø–∏—Å—å —Å –∫–∞–º–µ—Ä –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
- –ó–∞–∫–ª—é—á–µ–Ω–∏–µ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã

–ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ü–†–û–ö–£–†–û–†–ê:
–û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–ø–∏–ø–∞—Å—Ç –º–µ–∂–¥—É –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–∫—É—Ä–æ—Ä–∞ –Ω–∞ 87%.
–≠—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏.
–î–µ–ª–æ —Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–∞.

–í—ã–Ω–µ—Å–∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ —Å—É–¥–µ–±–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.
"""
    
    response = judge.chat(test_prompt)
    
    print("\n‚öñÔ∏è  –†–ï–®–ï–ù–ò–ï –°–£–î–¨–ò:")
    print(response)
    print("\n‚úÖ –¢–µ—Å—Ç –°–£–î–¨–ò –ø—Ä–æ–π–¥–µ–Ω")


def test_full_legal_system():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("\n" + "="*80)
    print("–¢–ï–°–¢: –ü–û–õ–ù–ê–Ø –Æ–†–ò–î–ò–ß–ï–°–ö–ê–Ø –°–ò–°–¢–ï–ú–ê (–°–§–ï–†–´ 047-049)")
    print("="*80)
    print("üôè –¢—Ä–∏ —Å—Ñ–µ—Ä—ã —Å–ª—É–∂–µ–Ω–∏—è –∏—Å—Ç–∏–Ω–µ")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    legal_system = LegalModelsFactory.create_full_legal_system(device="cpu")
    
    print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞:")
    print(f"   - –°–õ–ï–î–û–í–ê–¢–ï–õ–¨ (–°—Ñ–µ—Ä–∞ 047): {type(legal_system['investigator']).__name__}")
    print(f"   - –ü–†–û–ö–£–†–û–† (–°—Ñ–µ—Ä–∞ 048): {type(legal_system['prosecutor']).__name__}")
    print(f"   - –°–£–î–¨–Ø (–°—Ñ–µ—Ä–∞ 049): {type(legal_system['judge']).__name__}")
    
    print("\n‚úÖ –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–π–¥–µ–Ω")
    print("   üïâÔ∏è  –•–∞—Ä–µ –ö—Ä–∏—à–Ω–∞!")


def run_all_tests():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã"""
    print("\n" + "="*80)
    print("üß™ –ó–ê–ü–£–°–ö –í–°–ï–• –¢–ï–°–¢–û–í –Æ–†–ò–î–ò–ß–ï–°–ö–ò–• –ú–û–î–ï–õ–ï–ô")
    print("="*80)
    print("‚öñÔ∏è  –°–ª—É–∂–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–µ —á–µ—Ä–µ–∑ AI —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")
    
    try:
        # –¢–µ—Å—Ç 1: –°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å
        test_investigator()
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ–∫—É—Ä–æ—Ä
        test_prosecutor()
        
        # –¢–µ—Å—Ç 3: –°—É–¥—å—è
        test_judge()
        
        # –¢–µ—Å—Ç 4: –ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
        test_full_legal_system()
        
        print("\n" + "="*80)
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("="*80)
        print("üôè –ò—Å—Ç–∏–Ω–∞ –≤–æ—Å—Ç–æ—Ä–∂–µ—Å—Ç–≤–æ–≤–∞–ª–∞")
        print("üïâÔ∏è  –•–∞—Ä–µ –ö—Ä–∏—à–Ω–∞!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)


if __name__ == "__main__":
    import argparse
    
    parser = argparse.ArgumentParser(
        description="–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π"
    )
    parser.add_argument(
        "--test",
        type=str,
        choices=["investigator", "prosecutor", "judge", "system", "all"],
        default="all",
        help="–ö–∞–∫–æ–π —Ç–µ—Å—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å"
    )
    
    args = parser.parse_args()
    
    if args.test == "investigator":
        test_investigator()
    elif args.test == "prosecutor":
        test_prosecutor()
    elif args.test == "judge":
        test_judge()
    elif args.test == "system":
        test_full_legal_system()
    else:
        run_all_tests()



